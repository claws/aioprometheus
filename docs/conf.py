#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import os
import re
import sys

import sphinx_material
from sphinx.ext import apidoc

sys.path.insert(0, os.path.abspath(".."))


regexp = re.compile(r".*__version__ = [\'\"](.*?)[\'\"]", re.S)
init_file = os.path.join(
    os.path.dirname(__file__), "..", "src", "aioprometheus", "__init__.py"
)
with open(init_file, mode="r", encoding="utf-8") as f:
    module_content = f.read()
    match = regexp.match(module_content)
    if match:
        package_version = match.group(1)
    else:
        raise RuntimeError(f"Cannot find __version__ in {init_file}")


# -- General configuration ------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx_material",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "aioprometheus"
copyright = "2016-present, Chris Laws"  # pylint: disable=redefined-builtin
author = "Chris Laws"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = package_version
# The full version, including alpha/beta/rc tags.
release = package_version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#
# today = ''
#
# Else, today_fmt is used as the format for a strftime call.
#
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]


# -- Options for HTML output ----------------------------------------------

html_theme = "sphinx_material"
html_theme_path = sphinx_material.html_theme_path()
html_context = sphinx_material.get_html_context()
html_theme_options = {
    "nav_title": "aioprometheus",
    "repo_url": "https://github.com/claws/aioprometheus",
    "repo_name": "aioprometheus",
    "logo_icon": "&#xf092",
    "color_primary": "#0449A6",
    "color_accent": "#A66004",
    "html_minify": True,
    "css_minify": True,
    "globaltoc_depth": 3,
    "version_dropdown": False,
}

# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
html_title = "aioprometheus Documentation"

# A shorter title for the navigation bar.  Default is the same as html_title.
#
html_short_title = "aioprometheus"

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
# html_logo = None

# The name of an image file (relative to this directory) to use as a favicon of
# the docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# Custom sidebar templates, maps document names to template names.
#
html_sidebars = {
    "**": ["logo-text.html", "globaltoc.html", "localtoc.html", "searchbox.html"]
}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#
# html_additional_pages = {}

# If false, no module index is generated.
#
# html_domain_indices = True

# If false, no index is generated.
#
# html_use_index = True

# If true, the index is split into individual pages for each letter.
#
# html_split_index = False

# If true, links to the reST sources are added to the pages.
#
html_show_sourcelink = False

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#
html_show_sphinx = False

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#
html_show_copyright = True

# Output file base name for HTML help builder.
htmlhelp_basename = "aioprometheusdoc"


# -- suppress specific warnings -------------------------------------------

suppress_warnings = ["image.nonlocal_uri"]


# -- Custom config to work around readthedocs.org #1139 -------------------


def run_apidoc(_):
    argv = ["-f", "-e", "-M", "-o", "api", "../src/aioprometheus"]
    apidoc.main(argv)


def setup(app):
    app.connect("builder-inited", run_apidoc)
